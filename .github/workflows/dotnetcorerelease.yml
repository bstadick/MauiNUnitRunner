name: .NET Release

on:
  release:
    types: [published]

env:
  CONFIGURATION: Release
  GLOBALJSON: .\src\global.json
  PROJECTPATH: .\src\MauiNUnitRunner.Controls
  TESTPROJECTPATH: .\src\MauiNUnitRunner.Controls.Tests
  SOLUTION: .\src\MauiNUnitRunner.sln

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.0
      with:
        global-json-file: ${{ env.GLOBALJSON }}
        source-url: https://nuget.pkg.github.com/bstadick/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Nuget.exe
      uses: nuget/setup-nuget@v2.0.0
      with:
        nuget-api-key: ${{ secrets.GITHUB_TOKEN }}
    - name: Restore with dotnet
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_on: error
        command: dotnet restore "${{ env.SOLUTION }}"
    - name: Build with dotnet
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_on: error
        command: dotnet build "${{ env.SOLUTION }}" -c ${{ env.CONFIGURATION }} --no-restore
    - name: Test with dotnet
      run: dotnet test "${{ env.SOLUTION }}" -c ${{ env.CONFIGURATION }} --logger trx
    - name: Pack with dotnet
      run: dotnet pack "${{ env.SOLUTION }}" -c ${{ env.CONFIGURATION }}
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-artifacts
        path: |
          ${{ env.PROJECTPATH }}\bin\${{ env.CONFIGURATION }}\*.nupkg
          ${{ env.TESTPROJECTPATH }}\TestResults\*.trx
    - name: Deploy to GPR with dotnet
      run: dotnet nuget push "${{ env.PROJECTPATH }}\bin\${{ env.CONFIGURATION }}\*.nupkg" -s https://nuget.pkg.github.com/bstadick/index.json -k ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
